标签				描述	示例	
@author	 			标识一个类的作者	 										@author description
@deprecated	 		指名一个过期的类或成员	 									@deprecated description
{@docRoot}	 		指明当前文档根目录的路径									 Directory Path
@exception	 		标志一个类抛出的异常	 									@exception exception-name explanation
{@inheritDoc}	 	从直接父类继承的注释	 									Inherits a comment from the immediate surperclass.
{@link}	 			插入一个到另一个主题的链接	 								{@link name text}
{@linkplain}	 	插入一个到另一个主题的链接，但是该链接显示纯文本字体	 				Inserts an in-line link to another topic.
@param	 			说明一个方法的参数	 										@param parameter-name explanation
@return	 			说明返回值类型	 											@return explanation
@see	 			指定一个到另一个主题的链接	 								@see anchor
@serial	 			说明一个序列化属性											 @serial description
@serialData	 		说明通过writeObject( ) 和 writeExternal( )方法写的数据	 	@serialData description
@serialField	 	说明一个ObjectStreamField组件				 				@serialField name type description
@since	 			标记当引入一个特定的变化时					 				@since release
@throws	 			和 @exception标签一样.	 					 				The @throws tag has the same meaning as the @exception tag.
{@value}	 		显示常量的值，该常量必须是static属性。		 				Displays the value of a constant, which must be a static field.
@version	 		指定类的版本								 				@version info


javadoc 注释标签语法

@author   对类的说明 标明开发该类模块的作者

@version   对类的说明 标明该类模块的版本

@see     对类、属性、方法的说明 参考转向，也就是相关主题

@param    对方法的说明 对方法中某参数的说明

@return   对方法的说明 对方法返回值的说明

@exception  对方法的说明 对方法可能抛出的异常进行说明


1.   类（接口）注释
/**
* 类的描述
* @author Administrator
* @Time 2012-11-2014:49:01
*
*/
public classTest extends Button {
}

2.   构造方法注释
public class Test extends Button {

  /**

   * 构造方法 的描述

   * @param name

   *       按钮的上显示的文字

   */

  public Test(String name){

  }
}

3.   方法注释

public class Test extends Button {

  /**

   * 为按钮添加颜色

   *@param color

         按钮的颜色

*@return

*@exception  (方法有异常的话加)

* @author Administrator

* @Time2012-11-20 15:02:29


   */

  public voidaddColor(String color){

     ……

  }

}

4.   全局变量注释

例如：

public final class String

   implements Java.io.Serializable, Comparable<String>,CharSequence

{

   /** The value is used for characterstorage. */

   private final char value[];

   /** The offset is the first index of thestorage that is used. */

   private final int offset;

   /** The count is the number of charactersin the String. */

   private final int count;

   /** Cache the hash code for the string */

private int hash; // Default to 0

……

}

5.   字段/属性注释

例如：

public class EmailBody implements Serializable{

   private String id;

   private String senderName;//发送人姓名

   private String title;//不能超过120个中文字符

   private String content;//邮件正文

   private String attach;//附件，如果有的话

   private String totalCount;//总发送人数

   private String successCount;//成功发送的人数

   private Integer isDelete;//0不删除 1删除

   private Date createTime;//目前不支持定时 所以创建后即刻发送

   privateSet<EmailList> EmailList;

……

}